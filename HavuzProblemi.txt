using Microsoft.Graph;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;


namespace GraphFlowExample
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();

        }


        private void Form1_Load(object sender, EventArgs e)
        {
      
        }

        int[,] matris = new int[11, 11];
        Point[] nokta = new Point[21];
        int sayac = 0;
        public void Degerler()
        {
            Random rn = new Random();
            String dugum = txtmusluk.Text;
            string kenarsayısı = txtKenar.Text;
            Graphics grafik;
            grafik = this.CreateGraphics();
            Brush node = new SolidBrush(Color.Yellow);
            Brush node1 = new SolidBrush(Color.Blue);
            int[] kapasitedegeri = new int[46];
            int[] dugumsayisi = new int[11];
            // Point[] nokta = new Point[21];
            nokta[1].X = 246;
            nokta[1].Y = 177;
            nokta[2].X = 377;
            nokta[2].Y = 73;
            nokta[3].X = 377;
            nokta[3].Y = 275;
            nokta[4].X = 574;
            nokta[4].Y = 70;
            nokta[5].X = 574;
            nokta[5].Y = 277;
            nokta[6].X = 870;
            nokta[6].Y = 177;
            nokta[7].X = 776;
            nokta[7].Y = 71;
            nokta[8].X = 789;
            nokta[8].Y = 274;
            nokta[9].X = 485;
            nokta[9].Y = 177;
            nokta[10].X = 683;
            nokta[10].Y = 177;
            nokta[11].Y = 177;
            nokta[11].Y = 177;


            int[] baslangicbitis = new int[2];
            baslangicbitis[0] = Convert.ToInt32(txtBaslangic.Text);
            baslangicbitis[1] = Convert.ToInt32(txtBitis.Text);
            int nodeSource = Convert.ToInt32(baslangicbitis[0]);
            int nodeTerminal = Convert.ToInt32(baslangicbitis[1]);



            int[] bağlantılıdüğümler = new int[2];
            bağlantılıdüğümler[0] = Convert.ToInt32(txtKenar1.Text);
            bağlantılıdüğümler[1] = Convert.ToInt32(txtKenar2.Text);


            if (sayac < Convert.ToInt32(txtKenar.Text))
            {
                int j = 1;
                sayac++;
                for (int i = 1; i <= Convert.ToInt32(dugum); i++)
                {
                    dugumsayisi[j] = i;
                    grafik.FillEllipse(node, nokta[i].X, nokta[i].Y, 25, 25);
                    Font myFont = new Font("Helvetica", 15, FontStyle.Italic);
                    grafik.DrawString(dugumsayisi[j].ToString(), myFont, node1, nokta[i].X, nokta[i].Y);

                    j++;

                    if (dugumsayisi[1] == 1)
                    {
                        nokta[1].X = 246;
                        nokta[1].Y = 177;
                    }
                    else if (dugumsayisi[2] == 2)
                    {
                        nokta[2].X = 377;
                        nokta[2].Y = 73;
                    }
                    else if (dugumsayisi[3] == 3)
                    {
                        nokta[3].X = 377;
                        nokta[3].Y = 275;
                    }
                    else if (dugumsayisi[4] == 4)
                    {
                        nokta[4].X = 564;
                        nokta[4].Y = 87;
                    }
                    else if (dugumsayisi[5] == 5)
                    {
                        nokta[5].X = 574;
                        nokta[5].Y = 277;
                    }
                    else if (dugumsayisi[6] == 6)
                    {
                        nokta[6].X = 870;
                        nokta[6].Y = 177;
                    }
                    else if (dugumsayisi[7] == 7)
                    {
                        nokta[7].X = 776;
                        nokta[7].Y = 71;
                    }
                    else if (dugumsayisi[8] == 8)
                    {
                        nokta[8].X = 789;
                        nokta[8].Y = 274;
                    }
                    else if (dugumsayisi[9] == 9)
                    {
                        nokta[9].X = 485;
                        nokta[9].Y = 177;
                    }
                    else if (dugumsayisi[10] == 10)
                    {
                        nokta[10].X = 683;
                        nokta[10].Y = 177;
                    }
                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[2].X, nokta[2].Y, nokta[1].X, nokta[1].Y);
                        kapasitedegeri[1] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont1 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[1].ToString(), myFont1, node1, 262, 125);

                    }
                    else if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[1].X, nokta[1].Y, nokta[2].X, nokta[2].Y);
                        kapasitedegeri[1] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont1 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[1].ToString(), myFont1, node1, 262, 125);
                    }



                    else if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[3].X, nokta[3].Y, nokta[1].X, nokta[1].Y);
                        kapasitedegeri[2] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont2 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[2].ToString(), myFont2, node1, 300, 184);
                    }
                    else if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[1].X, nokta[1].Y, nokta[3].X, nokta[3].Y);
                        kapasitedegeri[2] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont2 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[2].ToString(), myFont2, node1, 300, 184);
                    }

                    else if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[4].X, nokta[4].Y, nokta[1].X, nokta[1].Y);
                        kapasitedegeri[3] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont3 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[3].ToString(), myFont3, node1, 410, 124);
                    }
                    else if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[1].X, nokta[1].Y, nokta[4].X, nokta[4].Y);
                        kapasitedegeri[3] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont3 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[3].ToString(), myFont3, node1, 410, 124);
                    }

                    else if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[5].X, nokta[5].Y, nokta[1].X, nokta[1].Y);
                        kapasitedegeri[4] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont4 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[4].ToString(), myFont4, node1, 410, 227);
                    }
                    else if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[1].X, nokta[1].Y, nokta[5].X, nokta[5].Y);
                        kapasitedegeri[4] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont4 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[4].ToString(), myFont4, node1, 410, 207);
                    }
                    else if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[6].X, nokta[6].Y, nokta[1].X, nokta[1].Y);
                        kapasitedegeri[5] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[5].ToString(), myFont5, node1, 561, 177);
                    }
                    else if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[1].X, nokta[1].Y, nokta[6].X, nokta[6].Y);
                        kapasitedegeri[5] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[5].ToString(), myFont5, node1, 561, 177);
                    }

                    else if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[7].X, nokta[7].Y, nokta[1].X, nokta[1].Y);
                        kapasitedegeri[6] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[6].ToString(), myFont5, node1, 511, 124);
                    }
                    else if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[1].X, nokta[1].Y, nokta[7].X, nokta[7].Y);
                        kapasitedegeri[6] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[6].ToString(), myFont5, node1, 511, 124);
                    }
                    else if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[8].X, nokta[8].Y, nokta[1].X, nokta[1].Y);
                        kapasitedegeri[7] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[7].ToString(), myFont5, node1, 518, 226);
                    }
                    else if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[1].X, nokta[1].Y, nokta[8].X, nokta[8].Y);
                        kapasitedegeri[7] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[7].ToString(), myFont5, node1, 518, 226);
                    }
                    else if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[9].X, nokta[9].Y, nokta[1].X, nokta[1].Y);
                        kapasitedegeri[8] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[8].ToString(), myFont5, node1, 366, 177);
                    }
                    else if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[1].X, nokta[1].Y, nokta[9].X, nokta[9].Y);
                        kapasitedegeri[8] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[8].ToString(), myFont5, node1, 366, 177);
                    }
                    else if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[10].X, nokta[10].Y, nokta[1].X, nokta[1].Y);
                        kapasitedegeri[9] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[9].ToString(), myFont5, node1, 465, 177);
                    }
                    else if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[1].X, nokta[1].Y, nokta[10].X, nokta[10].Y);
                        kapasitedegeri[9] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[9].ToString(), myFont5, node1, 465, 177);
                    }

                    else if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[3].X, nokta[3].Y, nokta[2].X, nokta[2].Y);
                        kapasitedegeri[10] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[10].ToString(), myFont5, node1, 377, 174);
                    }
                    else if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[2].X, nokta[2].Y, nokta[3].X, nokta[3].Y);
                        kapasitedegeri[10] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[10].ToString(), myFont5, node1, 377, 174);
                    }

                    else if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[4].X, nokta[4].Y, nokta[2].X, nokta[2].Y);
                        kapasitedegeri[11] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[11].ToString(), myFont5, node1, 476, 48);
                    }
                    else if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[2].X, nokta[2].Y, nokta[4].X, nokta[4].Y);
                        kapasitedegeri[11] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[11].ToString(), myFont5, node1, 476, 48);
                    }

                    else if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[5].X, nokta[5].Y, nokta[2].X, nokta[2].Y);
                        kapasitedegeri[12] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[12].ToString(), myFont5, node1, 476, 175);
                    }
                    else if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[2].X, nokta[2].Y, nokta[5].X, nokta[5].Y);
                        kapasitedegeri[12] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[12].ToString(), myFont5, node1, 476, 175);
                    }

                    else if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[6].X, nokta[6].Y, nokta[2].X, nokta[2].Y);
                        kapasitedegeri[13] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[13].ToString(), myFont5, node1, 626, 125);
                    }
                    else if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[2].X, nokta[2].Y, nokta[6].X, nokta[6].Y);
                        kapasitedegeri[13] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[13].ToString(), myFont5, node1, 626, 125);
                    }
                    else if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[7].X, nokta[7].Y, nokta[2].X, nokta[2].Y);
                        kapasitedegeri[14] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[14].ToString(), myFont5, node1, 577, 72);
                    }
                    else if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[2].X, nokta[2].Y, nokta[7].X, nokta[7].Y);
                        kapasitedegeri[14] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[14].ToString(), myFont5, node1, 577, 72);
                    }
                    else if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[8].X, nokta[8].Y, nokta[2].X, nokta[2].Y);
                        kapasitedegeri[15] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[15].ToString(), myFont5, node1, 583, 37);
                    }
                    else if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[2].X, nokta[2].Y, nokta[8].X, nokta[8].Y);
                        kapasitedegeri[15] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[15].ToString(), myFont5, node1, 583, 37);
                    }
                    else if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[9].X, nokta[9].Y, nokta[2].X, nokta[2].Y);
                        kapasitedegeri[16] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[16].ToString(), myFont5, node1, 431, 125);
                    }
                    else if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[2].X, nokta[2].Y, nokta[9].X, nokta[9].Y);
                        kapasitedegeri[16] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[16].ToString(), myFont5, node1, 431, 125);
                    }
                    else if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[10].X, nokta[10].Y, nokta[2].X, nokta[2].Y);
                        kapasitedegeri[17] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[17].ToString(), myFont5, node1, 530, 125);
                    }
                    else if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[2].X, nokta[2].Y, nokta[10].X, nokta[10].Y);
                        kapasitedegeri[17] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[17].ToString(), myFont5, node1, 530, 125);
                    }

                    else if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[4].X, nokta[4].Y, nokta[3].X, nokta[3].Y);
                        kapasitedegeri[18] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[18].ToString(), myFont5, node1, 476, 173);
                    }
                    else if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[3].X, nokta[3].Y, nokta[4].X, nokta[4].Y);
                        kapasitedegeri[18] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[18].ToString(), myFont5, node1, 476, 173);
                    }
                    else if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[5].X, nokta[5].Y, nokta[3].X, nokta[3].Y);
                        kapasitedegeri[19] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont2 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[19].ToString(), myFont2, node1, 476, 276);

                    }
                    else if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[3].X, nokta[3].Y, nokta[5].X, nokta[5].Y);
                        kapasitedegeri[19] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[19].ToString(), myFont5, node1, 476, 276);
                    }
                    else if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[6].X, nokta[6].Y, nokta[3].X, nokta[3].Y);
                        kapasitedegeri[20] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[20].ToString(), myFont5, node1, 626, 226);
                    }
                    else if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[3].X, nokta[3].Y, nokta[6].X, nokta[6].Y);
                        kapasitedegeri[20] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[20].ToString(), myFont5, node1, 626, 226);
                    }
                    else if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[7].X, nokta[7].Y, nokta[3].X, nokta[3].Y);
                        kapasitedegeri[21] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[21].ToString(), myFont5, node1, 577, 174);
                    }
                    else if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[3].X, nokta[3].Y, nokta[7].X, nokta[7].Y);
                        kapasitedegeri[21] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[21].ToString(), myFont5, node1, 577, 174);
                    }
                    else if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[8].X, nokta[8].Y, nokta[3].X, nokta[3].Y);
                        kapasitedegeri[22] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[22].ToString(), myFont5, node1, 583, 275);
                    }
                    else if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[3].X, nokta[3].Y, nokta[8].X, nokta[8].Y);
                        kapasitedegeri[22] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[22].ToString(), myFont5, node1, 583, 275);
                    }
                    else if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[9].X, nokta[9].Y, nokta[3].X, nokta[3].Y);
                        kapasitedegeri[23] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[23].ToString(), myFont5, node1, 431, 226);
                    }
                    else if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[3].X, nokta[3].Y, nokta[9].X, nokta[9].Y);
                        kapasitedegeri[23] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[23].ToString(), myFont5, node1, 431, 226);
                    }
                    else if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[10].X, nokta[10].Y, nokta[3].X, nokta[3].Y);
                        kapasitedegeri[24] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[24].ToString(), myFont5, node1, 530, 226);
                    }
                    else if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[3].X, nokta[3].Y, nokta[10].X, nokta[10].Y);
                        kapasitedegeri[24] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[24].ToString(), myFont5, node1, 530, 226);
                    }



                    else if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[5].X, nokta[5].Y, nokta[4].X, nokta[4].Y);
                        kapasitedegeri[25] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont3 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[25].ToString(), myFont3, node1, 574, 174);

                    }
                    else if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {


                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[4].X, nokta[4].Y, nokta[5].X, nokta[5].Y);
                        kapasitedegeri[25] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont3 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[25].ToString(), myFont3, node1, 574, 174);

                    }
                    else if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[6].X, nokta[6].Y, nokta[4].X, nokta[4].Y);
                        kapasitedegeri[26] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[26].ToString(), myFont5, node1, 715, 95);
                    }
                    else if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {

                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[4].X, nokta[4].Y, nokta[6].X, nokta[6].Y);
                        kapasitedegeri[26] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[26].ToString(), myFont5, node1, 715, 95);

                    }
                    else if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[7].X, nokta[7].Y, nokta[4].X, nokta[4].Y);
                        kapasitedegeri[27] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[27].ToString(), myFont5, node1, 675, 71);
                    }
                    else if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {


                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[4].X, nokta[4].Y, nokta[7].X, nokta[7].Y);
                        kapasitedegeri[27] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[27].ToString(), myFont5, node1, 675, 71);

                    }
                    else if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[8].X, nokta[8].Y, nokta[4].X, nokta[4].Y);
                        kapasitedegeri[28] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[28].ToString(), myFont5, node1, 682, 172);
                    }
                    else if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {


                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[4].X, nokta[4].Y, nokta[8].X, nokta[8].Y);
                        kapasitedegeri[28] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[28].ToString(), myFont5, node1, 682, 172);

                    }
                    else if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[9].X, nokta[9].Y, nokta[4].X, nokta[4].Y);
                        kapasitedegeri[29] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[29].ToString(), myFont5, node1, 540, 124);
                    }
                    else if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {


                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[4].X, nokta[4].Y, nokta[9].X, nokta[9].Y);
                        kapasitedegeri[29] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[29].ToString(), myFont5, node1, 540, 124);

                    }
                    else if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[10].X, nokta[10].Y, nokta[4].X, nokta[4].Y);
                        kapasitedegeri[30] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[30].ToString(), myFont5, node1, 660, 124);

                    }
                    else if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[4].X, nokta[4].Y, nokta[10].X, nokta[10].Y);
                        kapasitedegeri[30] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[30].ToString(), myFont5, node1, 660, 124);

                    }
                    else if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[6].X, nokta[6].Y, nokta[5].X, nokta[5].Y);
                        kapasitedegeri[31] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[31].ToString(), myFont5, node1, 725, 227);
                    }
                    else if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {

                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[5].X, nokta[5].Y, nokta[6].X, nokta[6].Y);
                        kapasitedegeri[31] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[31].ToString(), myFont5, node1, 725, 227);


                    }
                    else if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[7].X, nokta[7].Y, nokta[5].X, nokta[5].Y);
                        kapasitedegeri[32] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[32].ToString(), myFont5, node1, 675, 174);
                    }
                    else if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {

                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[5].X, nokta[5].Y, nokta[7].X, nokta[7].Y);
                        kapasitedegeri[32] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[32].ToString(), myFont5, node1, 675, 174);

                    }
                    else if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[8].X, nokta[8].Y, nokta[5].X, nokta[5].Y);
                        kapasitedegeri[33] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[33].ToString(), myFont5, node1, 682, 276);
                    }
                    else if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[5].X, nokta[5].Y, nokta[8].X, nokta[8].Y);
                        kapasitedegeri[33] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[33].ToString(), myFont5, node1, 682, 276);
                    }
                    else if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[9].X, nokta[9].Y, nokta[5].X, nokta[5].Y);
                        kapasitedegeri[34] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[34].ToString(), myFont5, node1, 530, 227);

                    }
                    else if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {


                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[5].X, nokta[5].Y, nokta[9].X, nokta[9].Y);
                        kapasitedegeri[34] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[34].ToString(), myFont5, node1, 530, 227);



                    }
                    else if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[10].X, nokta[10].Y, nokta[5].X, nokta[5].Y);
                        kapasitedegeri[35] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[35].ToString(), myFont5, node1, 629, 227);
                    }
                    else if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {

                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[5].X, nokta[5].Y, nokta[10].X, nokta[10].Y);
                        kapasitedegeri[35] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[35].ToString(), myFont5, node1, 629, 227);

                    }
                    else if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[7].X, nokta[7].Y, nokta[6].X, nokta[6].Y);
                        kapasitedegeri[36] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[36].ToString(), myFont5, node1, 826, 124);
                    }
                    else if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {

                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[6].X, nokta[6].Y, nokta[7].X, nokta[7].Y);
                        kapasitedegeri[36] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[36].ToString(), myFont5, node1, 826, 124);

                    }
                    else if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[8].X, nokta[8].Y, nokta[6].X, nokta[6].Y);
                        kapasitedegeri[37] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[37].ToString(), myFont5, node1, 770, 230);

                    }
                    else if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {


                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[6].X, nokta[6].Y, nokta[8].X, nokta[8].Y);
                        kapasitedegeri[37] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[37].ToString(), myFont5, node1, 770, 230);

                    }
                    else if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[9].X, nokta[9].Y, nokta[6].X, nokta[6].Y);
                        kapasitedegeri[38] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[38].ToString(), myFont5, node1, 680, 177);

                    }
                    else if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {

                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[6].X, nokta[6].Y, nokta[9].X, nokta[9].Y);
                        kapasitedegeri[38] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[38].ToString(), myFont5, node1, 680, 177);

                    }
                    else if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[10].X, nokta[10].Y, nokta[6].X, nokta[6].Y);
                        kapasitedegeri[39] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[39].ToString(), myFont5, node1, 779, 177);

                    }
                    else if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {


                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[6].X, nokta[6].Y, nokta[10].X, nokta[10].Y);
                        kapasitedegeri[39] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[39].ToString(), myFont5, node1, 779, 177);

                    }
                    else if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[8].X, nokta[8].Y, nokta[7].X, nokta[7].Y);
                        kapasitedegeri[40] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[40].ToString(), myFont5, node1, 783, 173);
                    }
                    else if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {

                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[7].X, nokta[7].Y, nokta[8].X, nokta[8].Y);
                        kapasitedegeri[40] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[40].ToString(), myFont5, node1, 783, 173);


                    }
                    else if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[9].X, nokta[9].Y, nokta[7].X, nokta[7].Y);
                        kapasitedegeri[41] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[41].ToString(), myFont5, node1, 631, 124);

                    }
                    else if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {


                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[7].X, nokta[7].Y, nokta[9].X, nokta[9].Y);
                        kapasitedegeri[41] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[41].ToString(), myFont5, node1, 631, 124);


                    }
                    else if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[10].X, nokta[10].Y, nokta[7].X, nokta[7].Y);
                        kapasitedegeri[42] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[42].ToString(), myFont5, node1, 730, 124);

                    }
                    else if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {


                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[7].X, nokta[7].Y, nokta[10].X, nokta[10].Y);
                        kapasitedegeri[42] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[42].ToString(), myFont5, node1, 730, 124);

                    }
                    else if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[9].X, nokta[9].Y, nokta[8].X, nokta[8].Y);
                        kapasitedegeri[43] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[43].ToString(), myFont5, node1, 637, 226);
                    }
                    else if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {



                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[8].X, nokta[8].Y, nokta[9].X, nokta[9].Y);
                        kapasitedegeri[43] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[43].ToString(), myFont5, node1, 637, 226);

                    }
                    else if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[10].X, nokta[10].Y, nokta[8].X, nokta[8].Y);
                        kapasitedegeri[44] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[44].ToString(), myFont5, node1, 736, 226);

                    }
                    else if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {

                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[8].X, nokta[8].Y, nokta[10].X, nokta[10].Y);
                        kapasitedegeri[44] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[44].ToString(), myFont5, node1, 736, 226);

                    }
                    else if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[10].X, nokta[10].Y, nokta[9].X, nokta[9].Y);
                        kapasitedegeri[45] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[45].ToString(), myFont5, node1, 584, 177);
                    }
                    else if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {

                        Pen edge = new Pen(Color.Red, 5);
                        edge.StartCap = LineCap.ArrowAnchor;
                        edge.EndCap = LineCap.RoundAnchor;
                        grafik.DrawLine(edge, nokta[9].X, nokta[9].Y, nokta[10].X, nokta[10].Y);
                        kapasitedegeri[45] = Convert.ToInt32(txtKapasite.Text);
                        Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                        grafik.DrawString(kapasitedegeri[45].ToString(), myFont5, node1, 584, 177);

                    }




                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        int kapasite12 = Convert.ToInt32(txtKapasite.Text);
                        matris[1, 2] = kapasite12;                     
                    }
                    if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        int kapasite12 = Convert.ToInt32(txtKapasite.Text);                     
                        matris[2, 1] = kapasite12;
                    }
                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        int kapasite13 = Convert.ToInt32(txtKapasite.Text);
                        matris[1, 3] = kapasite13;                     
                    }
                    if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        int kapasite13 = Convert.ToInt32(txtKapasite.Text);                    
                        matris[3, 1] = kapasite13;
                    }
                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        int kapasite14 = Convert.ToInt32(txtKapasite.Text);
                        matris[1, 4] = kapasite14;                   
                    }
                    if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        int kapasite14 = Convert.ToInt32(txtKapasite.Text);                      
                        matris[4, 1] = kapasite14;
                    }
                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        int kapasite15 = Convert.ToInt32(txtKapasite.Text);
                        matris[1, 5] = kapasite15;                   
                    }
                    if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        int kapasite15 = Convert.ToInt32(txtKapasite.Text);                    
                        matris[5, 1] = kapasite15;

                    }
                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        int kapasite16 = Convert.ToInt32(txtKapasite.Text);
                        matris[1, 6] = kapasite16;
                    }
                    if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        int kapasite16 = Convert.ToInt32(txtKapasite.Text);
                        matris[6, 1] = kapasite16;

                    }
                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        int kapasite17 = Convert.ToInt32(txtKapasite.Text);
                        matris[1, 7] = kapasite17;
                    }
                    if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        int kapasite17 = Convert.ToInt32(txtKapasite.Text);
                        matris[7, 1] = kapasite17;

                    }
                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        int kapasite18 = Convert.ToInt32(txtKapasite.Text);
                        matris[1, 8] = kapasite18;
                    }
                    if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        int kapasite18 = Convert.ToInt32(txtKapasite.Text);
                        matris[8, 1] = kapasite18;
                    }
                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        int kapasite19 = Convert.ToInt32(txtKapasite.Text);
                        matris[1, 9] = kapasite19;

                    }
                    if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        int kapasite19 = Convert.ToInt32(txtKapasite.Text);
                        matris[9, 1] = kapasite19;

                    }
                    if (dugumsayisi[1] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        int kapasite110 = Convert.ToInt32(txtKapasite.Text);
                        matris[1, 10] = kapasite110;

                    }
                    if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[1] == bağlantılıdüğümler[1])
                    {
                        int kapasite110 = Convert.ToInt32(txtKapasite.Text);
                        matris[10, 1] = kapasite110;

                    }
                    if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        int kapasite23 = Convert.ToInt32(txtKapasite.Text);
                        matris[2, 3] = kapasite23;
                    }
                    if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        int kapasite23 = Convert.ToInt32(txtKapasite.Text);
                        matris[3, 2] = kapasite23;

                    }
                    if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        int kapasite24 = Convert.ToInt32(txtKapasite.Text);
                        matris[2, 4] = kapasite24;
                    }
                    if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        int kapasite24 = Convert.ToInt32(txtKapasite.Text);
                        matris[4, 2] = kapasite24;

                    }
                    if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        int kapasite25 = Convert.ToInt32(txtKapasite.Text);
                        matris[2, 5] = kapasite25;
                    }
                    if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        int kapasite25 = Convert.ToInt32(txtKapasite.Text);
                        matris[5, 2] = kapasite25;

                    }
                    if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        int kapasite26 = Convert.ToInt32(txtKapasite.Text);
                        matris[2, 6] = kapasite26;
                    }
                    if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        int kapasite26 = Convert.ToInt32(txtKapasite.Text);
                        matris[6, 2] = kapasite26;

                    }
                    if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        int kapasite27 = Convert.ToInt32(txtKapasite.Text);
                        matris[2, 7] = kapasite27;
                    }
                    if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        int kapasite27 = Convert.ToInt32(txtKapasite.Text);
                        matris[7, 2] = kapasite27;

                    }
                    if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        int kapasite28 = Convert.ToInt32(txtKapasite.Text);
                        matris[2, 8] = kapasite28;
                    }
                    if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        int kapasite28 = Convert.ToInt32(txtKapasite.Text);
                        matris[8, 2] = kapasite28;

                    }
                    if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        int kapasite29 = Convert.ToInt32(txtKapasite.Text);
                        matris[2, 9] = kapasite29;
                    }
                    if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        int kapasite29 = Convert.ToInt32(txtKapasite.Text);
                        matris[9, 2] = kapasite29;
                    }
                    if (dugumsayisi[2] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        int kapasite210 = Convert.ToInt32(txtKapasite.Text);
                        matris[2, 10] = kapasite210;
                    }
                    if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[2] == bağlantılıdüğümler[1])
                    {
                        int kapasite210 = Convert.ToInt32(txtKapasite.Text);
                        matris[10, 2] = kapasite210;

                    }
                    if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        int kapasite34 = Convert.ToInt32(txtKapasite.Text);
                        matris[3, 4] = kapasite34;
                    }
                    if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        int kapasite34 = Convert.ToInt32(txtKapasite.Text);
                        matris[4, 3] = kapasite34;

                    }
                    if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        int kapasite35 = Convert.ToInt32(txtKapasite.Text);
                        matris[3, 5] = kapasite35;
                    }
                    if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        int kapasite35 = Convert.ToInt32(txtKapasite.Text);
                        matris[5, 3] = kapasite35;

                    }
                    if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        int kapasite36 = Convert.ToInt32(txtKapasite.Text);
                        matris[3, 6] = kapasite36;
                    }
                    if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        int kapasite36 = Convert.ToInt32(txtKapasite.Text);
                        matris[6, 3] = kapasite36;
                    }
                    if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        int kapasite37 = Convert.ToInt32(txtKapasite.Text);
                        matris[3, 7] = kapasite37;
                    }
                    if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        int kapasite37 = Convert.ToInt32(txtKapasite.Text);
                        matris[7, 3] = kapasite37;

                    }
                    if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        int kapasite38 = Convert.ToInt32(txtKapasite.Text);
                        matris[3, 8] = kapasite38;
                    }
                    if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        int kapasite38 = Convert.ToInt32(txtKapasite.Text);
                        matris[8, 3] = kapasite38;

                    }
                    if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        int kapasite39 = Convert.ToInt32(txtKapasite.Text);
                        matris[3, 9] = kapasite39;
                    }
                    if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        int kapasite39 = Convert.ToInt32(txtKapasite.Text);
                        matris[9, 3] = kapasite39;

                    }
                    if (dugumsayisi[3] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        int kapasite310 = Convert.ToInt32(txtKapasite.Text);
                        matris[3, 10] = kapasite310;
                    }
                    if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[3] == bağlantılıdüğümler[1])
                    {
                        int kapasite310 = Convert.ToInt32(txtKapasite.Text);
                        matris[10, 3] = kapasite310;

                    }
                    if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        int kapasite45 = Convert.ToInt32(txtKapasite.Text);
                        matris[4, 5] = kapasite45;
                    }
                    if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        int kapasite45 = Convert.ToInt32(txtKapasite.Text);
                        matris[5, 4] = kapasite45;

                    }
                    if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        int kapasite46 = Convert.ToInt32(txtKapasite.Text);
                        matris[4, 6] = kapasite46;
                    }
                    if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        int kapasite46 = Convert.ToInt32(txtKapasite.Text);
                        matris[6, 4] = kapasite46;
                    }
                    if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        int kapasite47 = Convert.ToInt32(txtKapasite.Text);
                        matris[4, 7] = kapasite47;
                    }
                    if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        int kapasite47 = Convert.ToInt32(txtKapasite.Text);
                        matris[7, 4] = kapasite47;
                    }
                    if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        int kapasite48 = Convert.ToInt32(txtKapasite.Text);
                        matris[4, 8] = kapasite48;
                    }
                    if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        int kapasite48 = Convert.ToInt32(txtKapasite.Text);
                        matris[8, 4] = kapasite48;
                    }
                    if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        int kapasite49 = Convert.ToInt32(txtKapasite.Text);
                        matris[4, 9] = kapasite49;
                    }
                    if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        int kapasite49 = Convert.ToInt32(txtKapasite.Text);
                        matris[9, 4] = kapasite49;
                    }
                    if (dugumsayisi[4] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        int kapasite410 = Convert.ToInt32(txtKapasite.Text);
                        matris[4, 10] = kapasite410;
                    }
                    if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[4] == bağlantılıdüğümler[1])
                    {
                        int kapasite410 = Convert.ToInt32(txtKapasite.Text);
                        matris[10, 4] = kapasite410;
                    }
                    if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        int kapasite56 = Convert.ToInt32(txtKapasite.Text);
                        matris[5, 6] = kapasite56;
                    }
                    if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        int kapasite56 = Convert.ToInt32(txtKapasite.Text);
                        matris[6, 5] = kapasite56;
                    }
                    if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        int kapasite57 = Convert.ToInt32(txtKapasite.Text);
                        matris[5, 7] = kapasite57;
                    }
                    if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        int kapasite57 = Convert.ToInt32(txtKapasite.Text);
                        matris[7, 5] = kapasite57;
                    }
                    if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        int kapasite58 = Convert.ToInt32(txtKapasite.Text);
                        matris[5, 8] = kapasite58;
                    }
                    if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        int kapasite58 = Convert.ToInt32(txtKapasite.Text);
                        matris[8, 5] = kapasite58;
                    }
                    if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        int kapasite59 = Convert.ToInt32(txtKapasite.Text);
                        matris[5, 9] = kapasite59;
                    }
                    if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        int kapasite59 = Convert.ToInt32(txtKapasite.Text);
                        matris[9, 5] = kapasite59;
                    }
                    if (dugumsayisi[5] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        int kapasite510 = Convert.ToInt32(txtKapasite.Text);
                        matris[5, 10] = kapasite510;
                    }
                    if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[5] == bağlantılıdüğümler[1])
                    {
                        int kapasite510 = Convert.ToInt32(txtKapasite.Text);
                        matris[10, 5] = kapasite510;
                    }
                    if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        int kapasite67 = Convert.ToInt32(txtKapasite.Text);
                        matris[6, 7] = kapasite67;
                    }
                    if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        int kapasite67 = Convert.ToInt32(txtKapasite.Text);
                        matris[7, 6] = kapasite67;
                    }
                    if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        int kapasite68 = Convert.ToInt32(txtKapasite.Text);
                        matris[6, 8] = kapasite68;
                    }
                    if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        int kapasite68 = Convert.ToInt32(txtKapasite.Text);
                        matris[8, 6] = kapasite68;
                    }
                    if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        int kapasite69 = Convert.ToInt32(txtKapasite.Text);
                        matris[6, 9] = kapasite69;
                    }
                    if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        int kapasite69 = Convert.ToInt32(txtKapasite.Text);
                        matris[9, 6] = kapasite69;

                    }
                    if (dugumsayisi[6] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        int kapasite610 = Convert.ToInt32(txtKapasite.Text);
                        matris[6, 10] = kapasite610;
                    }
                    if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[6] == bağlantılıdüğümler[1])
                    {
                        int kapasite610 = Convert.ToInt32(txtKapasite.Text);
                        matris[10, 6] = kapasite610;
                    }
                    if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        int kapasite78 = Convert.ToInt32(txtKapasite.Text);
                        matris[7, 8] = kapasite78;
                    }
                    if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        int kapasite78 = Convert.ToInt32(txtKapasite.Text);
                        matris[8, 7] = kapasite78;
                    }
                    if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        int kapasite79 = Convert.ToInt32(txtKapasite.Text);
                        matris[7, 9] = kapasite79;
                    }
                    if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        int kapasite79 = Convert.ToInt32(txtKapasite.Text);
                        matris[9, 7] = kapasite79;
                    }
                    if (dugumsayisi[7] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        int kapasite710 = Convert.ToInt32(txtKapasite.Text);
                        matris[7, 10] = kapasite710;
                    }
                    if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[7] == bağlantılıdüğümler[1])
                    {
                        int kapasite710 = Convert.ToInt32(txtKapasite.Text);
                        matris[10, 7] = kapasite710;
                    }
                    if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        int kapasite89 = Convert.ToInt32(txtKapasite.Text);
                        matris[8, 9] = kapasite89;
                    }
                    if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        int kapasite89 = Convert.ToInt32(txtKapasite.Text);
                        matris[9, 8] = kapasite89;
                    }
                    if (dugumsayisi[8] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        int kapasite810 = Convert.ToInt32(txtKapasite.Text);
                        matris[8, 10] = kapasite810;
                    }
                    if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[8] == bağlantılıdüğümler[1])
                    {
                        int kapasite810 = Convert.ToInt32(txtKapasite.Text);
                        matris[10, 8] = kapasite810;
                    }
                    if (dugumsayisi[9] == bağlantılıdüğümler[0] && dugumsayisi[10] == bağlantılıdüğümler[1])
                    {
                        int kapasite910 = Convert.ToInt32(txtKapasite.Text);
                        matris[9, 10] = kapasite910;
                    }
                    if (dugumsayisi[10] == bağlantılıdüğümler[0] && dugumsayisi[9] == bağlantılıdüğümler[1])
                    {
                        int kapasite910 = Convert.ToInt32(txtKapasite.Text);
                        matris[10, 9] = kapasite910;
                    }

                }

            }

          


            for (int i = 0; i < dugumsayisi.Length; i++)
            {
                if (dugumsayisi[i] == baslangicbitis[0])
                {
                    Font myFont1 = new Font("Helvetica", 15, FontStyle.Italic);
                    grafik.DrawString("Baslangıç", myFont1, node1, nokta[i].X - 30, nokta[i].Y - 14);

                }
                if (dugumsayisi[i] == baslangicbitis[1])
                {
                    Font myFont1 = new Font("Helvetica", 15, FontStyle.Italic);
                    grafik.DrawString("Bitiş", myFont1, node1, nokta[i].X - 30, nokta[i].Y - 14);

                }
            }


            Console.WriteLine("Mümkün olan maksimum akış " +
                                fordFulkerson(matris, nodeSource, nodeTerminal, sayac));
        

            minCut(matris, nodeSource, nodeTerminal, sayac);


            txtKenar1.Clear();
            txtKenar2.Clear();
            txtKapasite.Clear();



        }
        Graphics grafik;
        Brush kapasite = new SolidBrush(Color.Green);
 
        static readonly int V = 11;
        bool bfs(int[,] rGraph, int s, int t, int[] parent)
        {

            bool[] visited = new bool[V];
            for (int i = 0; i < V; ++i)
                visited[i] = false;

            List<int> queue = new List<int>();
            queue.Add(s);
            visited[s] = true;
            parent[s] = -1;

            while (queue.Count != 0)
            {
                int u = queue[0];
                queue.RemoveAt(0);

                for (int v = 0; v < V; v++)
                {
                    if (visited[v] == false && rGraph[u, v] > 0)
                    {
                        queue.Add(v);
                        parent[v] = u;
                        visited[v] = true;



                    }
                }
            }

            return (visited[t] == true);
        }



        public void dfs(int[,] rGraph, int s, bool[] visited)
        {
            visited[s] = true;
            for (int i = 0; i < V; i++)
            {
                if (rGraph[s, i] > 0 && !visited[i])
                {
                    dfs(rGraph, i, visited);
                }
            }
        }


        int fordFulkerson(int[,] matris, int baslangic, int bitiş, int k)
        {

            int u, v;
            int[,] rGraph = new int[V, V];
            for (u = 0; u < V; u++)
                for (v = 0; v < V; v++)
                    rGraph[u, v] = matris[u, v];


            int[] parent = new int[V];

            int max_flow = 0;
            grafik = this.CreateGraphics();


            while (bfs(rGraph, baslangic, bitiş, parent))
            {

                int path_flow = int.MaxValue;
                for (v = bitiş; v != baslangic; v = parent[v])
                {
                    u = parent[v];
                    path_flow = Math.Min(path_flow, rGraph[u, v]);
                    Pen edge = new Pen(Color.LightBlue, 6); 
                    edge.StartCap = LineCap.ArrowAnchor;
                    edge.EndCap = LineCap.RoundAnchor;
                    grafik.DrawLine(edge, nokta[v].X, nokta[v].Y, nokta[u].X, nokta[u].Y);

                }


                for (v = bitiş; v != baslangic; v = parent[v])
                {
                    u = parent[v];
                    rGraph[u, v] -= path_flow;
                    rGraph[v, u] += path_flow;

                    Font myFont5 = new Font("Helvetica", 15, FontStyle.Italic);
                    grafik.DrawString(path_flow.ToString(), myFont5, kapasite, (nokta[u].X + nokta[v].X - 25) / 2, (nokta[u].Y + nokta[v].Y) / 2);

                }


                max_flow += path_flow;

            }



            return max_flow;

        }




        public void minCut(int[,] matris, int baslangic, int bitiş, int k)
        {
            int u, v;

            int[,] rGraph = new int[V, V];
            for (int i = 0; i < V; i++)
            {
                for (int j = 0; j < V; j++)
                {
                    rGraph[i, j] = matris[i, j];
                }
            }

            int[] parent = new int[V];


            while (bfs(rGraph, baslangic, bitiş, parent))
            {


                int path_flow = int.MaxValue;
                for (v = bitiş; v != baslangic; v = parent[v])
                {
                    u = parent[v];
                    path_flow = Math.Min(path_flow, rGraph[u, v]);



                }


                for (v = bitiş; v != baslangic; v = parent[v])
                {
                    u = parent[v];
                    rGraph[u, v] -= path_flow;
                    rGraph[v, u] += path_flow;


                }

            }

            bool[] visited = new bool[V];
            dfs(rGraph, baslangic, visited);

            for (int i = 0; i < V; i++)
            {
                for (int j = 0; j < V; j++)
                {
                    if (matris[i, j] > 0 && visited[i] && !visited[j])
                    {
                        Console.WriteLine("max akışı kesen yol  ->  " + i + " - " + j);
                    }
                }
            }

        }


        private void Form1_Load(object sender, MouseEventArgs e)
        {

        }
        private void button1_Click(object sender, EventArgs e)
        {
            Degerler();

        }


        private void txtKenar_TextChanged(object sender, EventArgs e)
        {

        }

        private void txtKenar2_TextChanged(object sender, EventArgs e)
        {

        }

        private void txtKapasite_TextChanged(object sender, EventArgs e)
        {

        }

        private void txtmusluk_TextChanged(object sender, EventArgs e)
        {

        }

        private void label6_Click(object sender, EventArgs e)
        {

        }
    }
}
